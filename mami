#!/usr/bin/env python3

import os, time, random
import cv2
import zmq
import pickle
from dotenv import load_dotenv

load_dotenv()
PREDICTION_AND_IMAGE_ADDRESS = os.getenv("PREDICTION_AND_IMAGE_ADDRESS")
PREDICTION_AND_IMAGE_PORT = os.getenv("PREDICTION_AND_IMAGE_PORT")

context = zmq.Context()
socket = context.socket(zmq.SUB)
socket.connect(f"tcp://{PREDICTION_AND_IMAGE_ADDRESS}:{PREDICTION_AND_IMAGE_PORT}")
socket.setsockopt(zmq.SUBSCRIBE, b"")

while True:
    pred, timestamp, frame = pickle.loads(socket.recv())
    readable_pred = ("land rover    : %6.2f%%" % (pred[0] * 100),
                     "not land rover: %6.2f%%" % (pred[1] * 100))
    iso8601_timestamp = time.strftime("%Y-%m-%dT%H:%M:%S%z", timestamp)
    print(readable_pred[0])
    print(readable_pred[1])
    print(iso8601_timestamp)
    cv2.imshow('Frame', frame)
    keyboard_input = cv2.waitKey(1)
    if keyboard_input == 27:
        break
    elif keyboard_input == 115:
        cv2.imwrite(iso8601_timestamp + '_' + '(' +
                    str(random.randrange(1, 100, 1)) + ').png', frame)

cv2.destroyAllWindows()
